plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.yourdomain.iotcontroller'
    compileSdk 34

    defaultConfig {
        applicationId "com.yourdomain.iotcontroller"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.5.3'
    }

    // Java 17 compatibility
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.10"
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.activity:activity-compose:1.8.2'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'androidx.navigation:navigation-compose:2.7.6'
    implementation 'androidx.compose.ui:ui:1.6.5'
    implementation 'androidx.compose.material3:material3:1.2.1'
    implementation 'androidx.compose.ui:ui-tooling-preview:1.6.5'
    debugImplementation 'androidx.compose.ui:ui-tooling:1.6.5'
    debugImplementation 'androidx.compose.ui:ui-test-manifest:1.6.5'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0'
    implementation 'com.google.accompanist:accompanist-permissions:0.34.0'
    implementation 'com.squareup.okio:okio:3.8.0'

    // âœ… Correct MapLibre Compose wrapper (instead of ramani-maplibre)
    implementation "io.github.ramani-maps:maplibre-compose:0.7.0"

    implementation 'com.squareup.moshi:moshi:1.15.0'
    implementation "androidx.compose.material:material-icons-extended:1.6.5"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.6.5"
}

// Gradle task to download offline map with caching
import java.net.URL

def mdTilesCacheDir = file("${buildDir}/offline_mdtiles")

tasks.register("downloadMdTiles") {
    doLast {
        def mdFile = new File(mdTilesCacheDir, "offline_india.mdtiles")
        if (!mdFile.exists()) {
            mdTilesCacheDir.mkdirs()
            println "Downloading offline_india.mdtiles..."
            new URL("https://we.tl/t-CAaLcBJ2Ot").withInputStream { i ->
                mdFile.withOutputStream { it << i }
            }
            println "Download complete."
        } else {
            println "MDTiles already cached, skipping download."
        }

        // Copy cached file into app assets
        def assetsDir = file("src/main/assets/maps")
        assetsDir.mkdirs()
        copy {
            from mdFile
            into assetsDir
        }
        println "MDTiles copied to app assets."
    }
}